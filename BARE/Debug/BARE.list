
BARE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
<<<<<<< HEAD
  1 .text         000003a0  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000010  08000538  08000538  00010538  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000548  08000548  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08000548  08000548  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000548  08000548  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000548  08000548  00010548  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800054c  0800054c  0001054c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  08000550  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  08000554  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000554  00020020  2**0
=======
  1 .text         0000029c  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000010  08000434  08000434  00010434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000444  08000444  00020004  2**0
                  CONTENTS
  4 .ARM          00000000  08000444  08000444  00020004  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000444  08000444  00020004  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000444  08000444  00010444  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000448  08000448  00010448  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000004  20000000  0800044c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000004  08000450  00020004  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000450  00020020  2**0
>>>>>>> feature/systick
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020004  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020034  2**0
                  CONTENTS, READONLY
<<<<<<< HEAD
 13 .debug_info   00000919  00000000  00000000  00020077  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000271  00000000  00000000  00020990  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000078  00000000  00000000  00020c08  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000004d  00000000  00000000  00020c80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000dd38  00000000  00000000  00020ccd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c19  00000000  00000000  0002ea05  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0004feb0  00000000  00000000  0002f61e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000000d8  00000000  00000000  0007f4d0  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  0007f5a8  2**0
=======
 13 .debug_info   00000946  00000000  00000000  00020077  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000256  00000000  00000000  000209bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000080  00000000  00000000  00020c18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000052  00000000  00000000  00020c98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000dd32  00000000  00000000  00020cea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000bb3  00000000  00000000  0002ea1c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0004fea0  00000000  00000000  0002f5cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000000f8  00000000  00000000  0007f470  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  0007f568  2**0
>>>>>>> feature/systick
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000004 	.word	0x20000004
 80001b4:	00000000 	.word	0x00000000
<<<<<<< HEAD
 80001b8:	08000520 	.word	0x08000520
=======
 80001b8:	0800041c 	.word	0x0800041c
>>>>>>> feature/systick

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000008 	.word	0x20000008
<<<<<<< HEAD
 80001d4:	08000520 	.word	0x08000520
=======
 80001d4:	0800041c 	.word	0x0800041c
>>>>>>> feature/systick

080001d8 <main>:


void delay(uint32_t time);

int main(void)
{
 80001d8:	b580      	push	{r7, lr}
 80001da:	af00      	add	r7, sp, #0
	SystemCoreClockUpdate();
<<<<<<< HEAD
 80001dc:	f000 f8d2 	bl	8000384 <SystemCoreClockUpdate>

	PWR->CR |= PWR_CR_VOS;
 80001e0:	4b4e      	ldr	r3, [pc, #312]	; (800031c <main+0x144>)
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	4a4d      	ldr	r2, [pc, #308]	; (800031c <main+0x144>)
 80001e6:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80001ea:	6013      	str	r3, [r2, #0]

	FLASH->ACR |= FLASH_ACR_ICEN | FLASH_ACR_DCEN | FLASH_ACR_PRFTEN | FLASH_ACR_LATENCY_3WS;
 80001ec:	4b4c      	ldr	r3, [pc, #304]	; (8000320 <main+0x148>)
 80001ee:	681b      	ldr	r3, [r3, #0]
 80001f0:	4a4b      	ldr	r2, [pc, #300]	; (8000320 <main+0x148>)
 80001f2:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80001f6:	f043 0303 	orr.w	r3, r3, #3
 80001fa:	6013      	str	r3, [r2, #0]

	RCC->AHB1ENR |= RCC_AHB1ENR_GPIOAEN | RCC_AHB1ENR_GPIODEN;
 80001fc:	4b49      	ldr	r3, [pc, #292]	; (8000324 <main+0x14c>)
 80001fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000200:	4a48      	ldr	r2, [pc, #288]	; (8000324 <main+0x14c>)
 8000202:	f043 0309 	orr.w	r3, r3, #9
 8000206:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOD->MODER |= GPIO_MODER_MODE12_0 |
 8000208:	4b47      	ldr	r3, [pc, #284]	; (8000328 <main+0x150>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a46      	ldr	r2, [pc, #280]	; (8000328 <main+0x150>)
 800020e:	f043 43aa 	orr.w	r3, r3, #1426063360	; 0x55000000
 8000212:	6013      	str	r3, [r2, #0]
					GPIO_MODER_MODE13_0 |
					GPIO_MODER_MODE14_0 |
					GPIO_MODER_MODE15_0; // set GPIO to "output" mode for LEDs

	RCC->PLLCFGR |= RCC_PLLCFGR_PLLQ_3;
 8000214:	4b43      	ldr	r3, [pc, #268]	; (8000324 <main+0x14c>)
 8000216:	685b      	ldr	r3, [r3, #4]
 8000218:	4a42      	ldr	r2, [pc, #264]	; (8000324 <main+0x14c>)
 800021a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800021e:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR &= ~(	RCC_PLLCFGR_PLLQ_0 	|
 8000220:	4b40      	ldr	r3, [pc, #256]	; (8000324 <main+0x14c>)
 8000222:	685b      	ldr	r3, [r3, #4]
 8000224:	4a3f      	ldr	r2, [pc, #252]	; (8000324 <main+0x14c>)
 8000226:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 800022a:	6053      	str	r3, [r2, #4]
						RCC_PLLCFGR_PLLQ_1 	|
						RCC_PLLCFGR_PLLQ_2	);

	RCC->PLLCFGR |= RCC_PLLCFGR_PLLSRC_HSE;
 800022c:	4b3d      	ldr	r3, [pc, #244]	; (8000324 <main+0x14c>)
 800022e:	685b      	ldr	r3, [r3, #4]
 8000230:	4a3c      	ldr	r2, [pc, #240]	; (8000324 <main+0x14c>)
 8000232:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8000236:	6053      	str	r3, [r2, #4]

	RCC->PLLCFGR |= RCC_PLLCFGR_PLLP_0;
 8000238:	4b3a      	ldr	r3, [pc, #232]	; (8000324 <main+0x14c>)
 800023a:	685b      	ldr	r3, [r3, #4]
 800023c:	4a39      	ldr	r2, [pc, #228]	; (8000324 <main+0x14c>)
 800023e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000242:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLP_1);
 8000244:	4b37      	ldr	r3, [pc, #220]	; (8000324 <main+0x14c>)
 8000246:	685b      	ldr	r3, [r3, #4]
 8000248:	4a36      	ldr	r2, [pc, #216]	; (8000324 <main+0x14c>)
 800024a:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800024e:	6053      	str	r3, [r2, #4]

	RCC->PLLCFGR |= RCC_PLLCFGR_PLLM_2;
 8000250:	4b34      	ldr	r3, [pc, #208]	; (8000324 <main+0x14c>)
 8000252:	685b      	ldr	r3, [r3, #4]
 8000254:	4a33      	ldr	r2, [pc, #204]	; (8000324 <main+0x14c>)
 8000256:	f043 0304 	orr.w	r3, r3, #4
 800025a:	6053      	str	r3, [r2, #4]
	RCC->PLLCFGR &= ~(	RCC_PLLCFGR_PLLM_0	|
 800025c:	4b31      	ldr	r3, [pc, #196]	; (8000324 <main+0x14c>)
 800025e:	685b      	ldr	r3, [r3, #4]
 8000260:	4a30      	ldr	r2, [pc, #192]	; (8000324 <main+0x14c>)
 8000262:	f023 033b 	bic.w	r3, r3, #59	; 0x3b
 8000266:	6053      	str	r3, [r2, #4]
						RCC_PLLCFGR_PLLM_1 	|
						RCC_PLLCFGR_PLLM_3 	|
						RCC_PLLCFGR_PLLM_4 	|
						RCC_PLLCFGR_PLLM_5	);

	RCC->CR |= RCC_CR_HSEON;
 8000268:	4b2e      	ldr	r3, [pc, #184]	; (8000324 <main+0x14c>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	4a2d      	ldr	r2, [pc, #180]	; (8000324 <main+0x14c>)
 800026e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000272:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_HSERDY)){}
 8000274:	bf00      	nop
 8000276:	4b2b      	ldr	r3, [pc, #172]	; (8000324 <main+0x14c>)
 8000278:	681b      	ldr	r3, [r3, #0]
 800027a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800027e:	2b00      	cmp	r3, #0
 8000280:	d0f9      	beq.n	8000276 <main+0x9e>
	if(RCC->CR & RCC_CR_HSERDY){
 8000282:	4b28      	ldr	r3, [pc, #160]	; (8000324 <main+0x14c>)
 8000284:	681b      	ldr	r3, [r3, #0]
 8000286:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800028a:	2b00      	cmp	r3, #0
 800028c:	d005      	beq.n	800029a <main+0xc2>
		GPIOD->ODR |= GPIO_ODR_OD15;
 800028e:	4b26      	ldr	r3, [pc, #152]	; (8000328 <main+0x150>)
 8000290:	695b      	ldr	r3, [r3, #20]
 8000292:	4a25      	ldr	r2, [pc, #148]	; (8000328 <main+0x150>)
 8000294:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000298:	6153      	str	r3, [r2, #20]
	}

	RCC->CR |= RCC_CR_PLLON;
 800029a:	4b22      	ldr	r3, [pc, #136]	; (8000324 <main+0x14c>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	4a21      	ldr	r2, [pc, #132]	; (8000324 <main+0x14c>)
 80002a0:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002a4:	6013      	str	r3, [r2, #0]
	while(!(RCC->CR & RCC_CR_PLLRDY)){}
 80002a6:	bf00      	nop
 80002a8:	4b1e      	ldr	r3, [pc, #120]	; (8000324 <main+0x14c>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80002b0:	2b00      	cmp	r3, #0
 80002b2:	d0f9      	beq.n	80002a8 <main+0xd0>
	if(RCC->CR & RCC_CR_PLLRDY){
 80002b4:	4b1b      	ldr	r3, [pc, #108]	; (8000324 <main+0x14c>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d005      	beq.n	80002cc <main+0xf4>
		GPIOD->ODR |= GPIO_ODR_OD14;
 80002c0:	4b19      	ldr	r3, [pc, #100]	; (8000328 <main+0x150>)
 80002c2:	695b      	ldr	r3, [r3, #20]
 80002c4:	4a18      	ldr	r2, [pc, #96]	; (8000328 <main+0x150>)
 80002c6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80002ca:	6153      	str	r3, [r2, #20]
	}

	RCC->CFGR |= RCC_CFGR_PPRE1_2 | RCC_CFGR_SW_PLL;
 80002cc:	4b15      	ldr	r3, [pc, #84]	; (8000324 <main+0x14c>)
 80002ce:	689b      	ldr	r3, [r3, #8]
 80002d0:	4a14      	ldr	r2, [pc, #80]	; (8000324 <main+0x14c>)
 80002d2:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80002d6:	f043 0302 	orr.w	r3, r3, #2
 80002da:	6093      	str	r3, [r2, #8]
	while(!(RCC->CFGR & RCC_CFGR_SWS_PLL)){}
 80002dc:	bf00      	nop
 80002de:	4b11      	ldr	r3, [pc, #68]	; (8000324 <main+0x14c>)
 80002e0:	689b      	ldr	r3, [r3, #8]
 80002e2:	f003 0308 	and.w	r3, r3, #8
 80002e6:	2b00      	cmp	r3, #0
 80002e8:	d0f9      	beq.n	80002de <main+0x106>
	if(RCC->CFGR & RCC_CFGR_SWS_PLL){
 80002ea:	4b0e      	ldr	r3, [pc, #56]	; (8000324 <main+0x14c>)
 80002ec:	689b      	ldr	r3, [r3, #8]
 80002ee:	f003 0308 	and.w	r3, r3, #8
 80002f2:	2b00      	cmp	r3, #0
 80002f4:	d005      	beq.n	8000302 <main+0x12a>
		GPIOD->ODR |= GPIO_ODR_OD13;
 80002f6:	4b0c      	ldr	r3, [pc, #48]	; (8000328 <main+0x150>)
 80002f8:	695b      	ldr	r3, [r3, #20]
 80002fa:	4a0b      	ldr	r2, [pc, #44]	; (8000328 <main+0x150>)
 80002fc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000300:	6153      	str	r3, [r2, #20]
	}

	SystemCoreClockUpdate();
 8000302:	f000 f83f 	bl	8000384 <SystemCoreClockUpdate>
					GPIOD->ODR ^= GPIO_ODR_OD12;
					delay(200); //de-bounce
				}
		    break;
		  default:
			  GPIOD->ODR ^= GPIO_ODR_OD12;
 8000306:	4b08      	ldr	r3, [pc, #32]	; (8000328 <main+0x150>)
 8000308:	695b      	ldr	r3, [r3, #20]
 800030a:	4a07      	ldr	r2, [pc, #28]	; (8000328 <main+0x150>)
 800030c:	f483 5380 	eor.w	r3, r3, #4096	; 0x1000
 8000310:	6153      	str	r3, [r2, #20]
			  delay(200);
 8000312:	20c8      	movs	r0, #200	; 0xc8
 8000314:	f000 f80a 	bl	800032c <delay>
		switch (BUTTON_MODE) {
 8000318:	e7f5      	b.n	8000306 <main+0x12e>
 800031a:	bf00      	nop
 800031c:	40007000 	.word	0x40007000
 8000320:	40023c00 	.word	0x40023c00
 8000324:	40023800 	.word	0x40023800
 8000328:	40020c00 	.word	0x40020c00

0800032c <delay>:
	}

}


void delay(uint32_t timeMS){
 800032c:	b480      	push	{r7}
 800032e:	b085      	sub	sp, #20
 8000330:	af00      	add	r7, sp, #0
 8000332:	6078      	str	r0, [r7, #4]
	for(uint32_t i = 0; i < timeMS * 7059; i++){} //7059 is from experimentation
 8000334:	2300      	movs	r3, #0
 8000336:	60fb      	str	r3, [r7, #12]
 8000338:	e002      	b.n	8000340 <delay+0x14>
 800033a:	68fb      	ldr	r3, [r7, #12]
 800033c:	3301      	adds	r3, #1
 800033e:	60fb      	str	r3, [r7, #12]
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	f641 3293 	movw	r2, #7059	; 0x1b93
 8000346:	fb02 f303 	mul.w	r3, r2, r3
 800034a:	68fa      	ldr	r2, [r7, #12]
 800034c:	429a      	cmp	r2, r3
 800034e:	d3f4      	bcc.n	800033a <delay+0xe>
}
 8000350:	bf00      	nop
 8000352:	bf00      	nop
 8000354:	3714      	adds	r7, #20
 8000356:	46bd      	mov	sp, r7
 8000358:	f85d 7b04 	ldr.w	r7, [sp], #4
 800035c:	4770      	bx	lr
	...

08000360 <SystemInit>:
=======
 80001dc:	f000 f850 	bl	8000280 <SystemCoreClockUpdate>

	RCC->AHB1ENR |= RCC_AHB1ENR_GPIODEN;
 80001e0:	4b12      	ldr	r3, [pc, #72]	; (800022c <main+0x54>)
 80001e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001e4:	4a11      	ldr	r2, [pc, #68]	; (800022c <main+0x54>)
 80001e6:	f043 0308 	orr.w	r3, r3, #8
 80001ea:	6313      	str	r3, [r2, #48]	; 0x30

	GPIOD->MODER |= GPIO_MODER_MODE12_0 |
 80001ec:	4b10      	ldr	r3, [pc, #64]	; (8000230 <main+0x58>)
 80001ee:	681b      	ldr	r3, [r3, #0]
 80001f0:	4a0f      	ldr	r2, [pc, #60]	; (8000230 <main+0x58>)
 80001f2:	f043 43aa 	orr.w	r3, r3, #1426063360	; 0x55000000
 80001f6:	6013      	str	r3, [r2, #0]
					GPIO_MODER_MODE15_0; // set GPIO to output for LEDs

	//RCC->CR &= RCC_CR_HSION; // HSI on by default
	//while(!(RCC->CR & RCC_CR_HSIRDY)){}

	SysTick->LOAD |= 10000000; // this is about 1 second
 80001f8:	4b0e      	ldr	r3, [pc, #56]	; (8000234 <main+0x5c>)
 80001fa:	685a      	ldr	r2, [r3, #4]
 80001fc:	490d      	ldr	r1, [pc, #52]	; (8000234 <main+0x5c>)
 80001fe:	4b0e      	ldr	r3, [pc, #56]	; (8000238 <main+0x60>)
 8000200:	4313      	orrs	r3, r2
 8000202:	604b      	str	r3, [r1, #4]
	//NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL);
	SysTick->VAL &= ~SysTick_VAL_CURRENT_Msk;
 8000204:	4b0b      	ldr	r3, [pc, #44]	; (8000234 <main+0x5c>)
 8000206:	689b      	ldr	r3, [r3, #8]
 8000208:	4a0a      	ldr	r2, [pc, #40]	; (8000234 <main+0x5c>)
 800020a:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 800020e:	6093      	str	r3, [r2, #8]
	SysTick->CTRL |= 	SysTick_CTRL_CLKSOURCE_Msk 	|
 8000210:	4b08      	ldr	r3, [pc, #32]	; (8000234 <main+0x5c>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a07      	ldr	r2, [pc, #28]	; (8000234 <main+0x5c>)
 8000216:	f043 0307 	orr.w	r3, r3, #7
 800021a:	6013      	str	r3, [r2, #0]
						SysTick_CTRL_TICKINT_Msk 	|
						SysTick_CTRL_ENABLE_Msk;

    /* Loop forever */
	while(1){
		GPIOD->ODR |= GPIO_ODR_OD12; // 12 -> Green
 800021c:	4b04      	ldr	r3, [pc, #16]	; (8000230 <main+0x58>)
 800021e:	695b      	ldr	r3, [r3, #20]
 8000220:	4a03      	ldr	r2, [pc, #12]	; (8000230 <main+0x58>)
 8000222:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000226:	6153      	str	r3, [r2, #20]
 8000228:	e7f8      	b.n	800021c <main+0x44>
 800022a:	bf00      	nop
 800022c:	40023800 	.word	0x40023800
 8000230:	40020c00 	.word	0x40020c00
 8000234:	e000e010 	.word	0xe000e010
 8000238:	00989680 	.word	0x00989680

0800023c <SysTick_Handler>:

void delay(uint32_t timeMS){
	for(uint32_t i = 0; i < timeMS * 1000; i++){}
}

void SysTick_Handler(void){
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0
	GPIOD->ODR ^= GPIO_ODR_OD15; //15 -> Blue
 8000240:	4b05      	ldr	r3, [pc, #20]	; (8000258 <SysTick_Handler+0x1c>)
 8000242:	695b      	ldr	r3, [r3, #20]
 8000244:	4a04      	ldr	r2, [pc, #16]	; (8000258 <SysTick_Handler+0x1c>)
 8000246:	f483 4300 	eor.w	r3, r3, #32768	; 0x8000
 800024a:	6153      	str	r3, [r2, #20]
}
 800024c:	bf00      	nop
 800024e:	46bd      	mov	sp, r7
 8000250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000254:	4770      	bx	lr
 8000256:	bf00      	nop
 8000258:	40020c00 	.word	0x40020c00

0800025c <SystemInit>:
>>>>>>> feature/systick
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
<<<<<<< HEAD
 8000360:	b480      	push	{r7}
 8000362:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000364:	4b06      	ldr	r3, [pc, #24]	; (8000380 <SystemInit+0x20>)
 8000366:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800036a:	4a05      	ldr	r2, [pc, #20]	; (8000380 <SystemInit+0x20>)
 800036c:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8000370:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
=======
 800025c:	b480      	push	{r7}
 800025e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8000260:	4b06      	ldr	r3, [pc, #24]	; (800027c <SystemInit+0x20>)
 8000262:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000266:	4a05      	ldr	r2, [pc, #20]	; (800027c <SystemInit+0x20>)
 8000268:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800026c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
>>>>>>> feature/systick

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
<<<<<<< HEAD
 8000374:	bf00      	nop
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	e000ed00 	.word	0xe000ed00

08000384 <SystemCoreClockUpdate>:
=======
 8000270:	bf00      	nop
 8000272:	46bd      	mov	sp, r7
 8000274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000278:	4770      	bx	lr
 800027a:	bf00      	nop
 800027c:	e000ed00 	.word	0xe000ed00

08000280 <SystemCoreClockUpdate>:
>>>>>>> feature/systick
  *     
  * @param  None
  * @retval None
  */
void SystemCoreClockUpdate(void)
{
<<<<<<< HEAD
 8000384:	b480      	push	{r7}
 8000386:	b087      	sub	sp, #28
 8000388:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 800038a:	2300      	movs	r3, #0
 800038c:	613b      	str	r3, [r7, #16]
 800038e:	2300      	movs	r3, #0
 8000390:	617b      	str	r3, [r7, #20]
 8000392:	2302      	movs	r3, #2
 8000394:	60fb      	str	r3, [r7, #12]
 8000396:	2300      	movs	r3, #0
 8000398:	60bb      	str	r3, [r7, #8]
 800039a:	2302      	movs	r3, #2
 800039c:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 800039e:	4b34      	ldr	r3, [pc, #208]	; (8000470 <SystemCoreClockUpdate+0xec>)
 80003a0:	689b      	ldr	r3, [r3, #8]
 80003a2:	f003 030c 	and.w	r3, r3, #12
 80003a6:	613b      	str	r3, [r7, #16]

  switch (tmp)
 80003a8:	693b      	ldr	r3, [r7, #16]
 80003aa:	2b08      	cmp	r3, #8
 80003ac:	d011      	beq.n	80003d2 <SystemCoreClockUpdate+0x4e>
 80003ae:	693b      	ldr	r3, [r7, #16]
 80003b0:	2b08      	cmp	r3, #8
 80003b2:	d844      	bhi.n	800043e <SystemCoreClockUpdate+0xba>
 80003b4:	693b      	ldr	r3, [r7, #16]
 80003b6:	2b00      	cmp	r3, #0
 80003b8:	d003      	beq.n	80003c2 <SystemCoreClockUpdate+0x3e>
 80003ba:	693b      	ldr	r3, [r7, #16]
 80003bc:	2b04      	cmp	r3, #4
 80003be:	d004      	beq.n	80003ca <SystemCoreClockUpdate+0x46>
 80003c0:	e03d      	b.n	800043e <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 80003c2:	4b2c      	ldr	r3, [pc, #176]	; (8000474 <SystemCoreClockUpdate+0xf0>)
 80003c4:	4a2c      	ldr	r2, [pc, #176]	; (8000478 <SystemCoreClockUpdate+0xf4>)
 80003c6:	601a      	str	r2, [r3, #0]
      break;
 80003c8:	e03d      	b.n	8000446 <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 80003ca:	4b2a      	ldr	r3, [pc, #168]	; (8000474 <SystemCoreClockUpdate+0xf0>)
 80003cc:	4a2b      	ldr	r2, [pc, #172]	; (800047c <SystemCoreClockUpdate+0xf8>)
 80003ce:	601a      	str	r2, [r3, #0]
      break;
 80003d0:	e039      	b.n	8000446 <SystemCoreClockUpdate+0xc2>
=======
 8000280:	b480      	push	{r7}
 8000282:	b087      	sub	sp, #28
 8000284:	af00      	add	r7, sp, #0
  uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 8000286:	2300      	movs	r3, #0
 8000288:	613b      	str	r3, [r7, #16]
 800028a:	2300      	movs	r3, #0
 800028c:	617b      	str	r3, [r7, #20]
 800028e:	2302      	movs	r3, #2
 8000290:	60fb      	str	r3, [r7, #12]
 8000292:	2300      	movs	r3, #0
 8000294:	60bb      	str	r3, [r7, #8]
 8000296:	2302      	movs	r3, #2
 8000298:	607b      	str	r3, [r7, #4]
  
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & RCC_CFGR_SWS;
 800029a:	4b34      	ldr	r3, [pc, #208]	; (800036c <SystemCoreClockUpdate+0xec>)
 800029c:	689b      	ldr	r3, [r3, #8]
 800029e:	f003 030c 	and.w	r3, r3, #12
 80002a2:	613b      	str	r3, [r7, #16]

  switch (tmp)
 80002a4:	693b      	ldr	r3, [r7, #16]
 80002a6:	2b08      	cmp	r3, #8
 80002a8:	d011      	beq.n	80002ce <SystemCoreClockUpdate+0x4e>
 80002aa:	693b      	ldr	r3, [r7, #16]
 80002ac:	2b08      	cmp	r3, #8
 80002ae:	d844      	bhi.n	800033a <SystemCoreClockUpdate+0xba>
 80002b0:	693b      	ldr	r3, [r7, #16]
 80002b2:	2b00      	cmp	r3, #0
 80002b4:	d003      	beq.n	80002be <SystemCoreClockUpdate+0x3e>
 80002b6:	693b      	ldr	r3, [r7, #16]
 80002b8:	2b04      	cmp	r3, #4
 80002ba:	d004      	beq.n	80002c6 <SystemCoreClockUpdate+0x46>
 80002bc:	e03d      	b.n	800033a <SystemCoreClockUpdate+0xba>
  {
    case 0x00:  /* HSI used as system clock source */
      SystemCoreClock = HSI_VALUE;
 80002be:	4b2c      	ldr	r3, [pc, #176]	; (8000370 <SystemCoreClockUpdate+0xf0>)
 80002c0:	4a2c      	ldr	r2, [pc, #176]	; (8000374 <SystemCoreClockUpdate+0xf4>)
 80002c2:	601a      	str	r2, [r3, #0]
      break;
 80002c4:	e03d      	b.n	8000342 <SystemCoreClockUpdate+0xc2>
    case 0x04:  /* HSE used as system clock source */
      SystemCoreClock = HSE_VALUE;
 80002c6:	4b2a      	ldr	r3, [pc, #168]	; (8000370 <SystemCoreClockUpdate+0xf0>)
 80002c8:	4a2b      	ldr	r2, [pc, #172]	; (8000378 <SystemCoreClockUpdate+0xf8>)
 80002ca:	601a      	str	r2, [r3, #0]
      break;
 80002cc:	e039      	b.n	8000342 <SystemCoreClockUpdate+0xc2>
>>>>>>> feature/systick
    case 0x08:  /* PLL used as system clock source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
<<<<<<< HEAD
 80003d2:	4b27      	ldr	r3, [pc, #156]	; (8000470 <SystemCoreClockUpdate+0xec>)
 80003d4:	685b      	ldr	r3, [r3, #4]
 80003d6:	0d9b      	lsrs	r3, r3, #22
 80003d8:	f003 0301 	and.w	r3, r3, #1
 80003dc:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80003de:	4b24      	ldr	r3, [pc, #144]	; (8000470 <SystemCoreClockUpdate+0xec>)
 80003e0:	685b      	ldr	r3, [r3, #4]
 80003e2:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80003e6:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 80003e8:	68bb      	ldr	r3, [r7, #8]
 80003ea:	2b00      	cmp	r3, #0
 80003ec:	d00c      	beq.n	8000408 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80003ee:	4a23      	ldr	r2, [pc, #140]	; (800047c <SystemCoreClockUpdate+0xf8>)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	fbb2 f3f3 	udiv	r3, r2, r3
 80003f6:	4a1e      	ldr	r2, [pc, #120]	; (8000470 <SystemCoreClockUpdate+0xec>)
 80003f8:	6852      	ldr	r2, [r2, #4]
 80003fa:	0992      	lsrs	r2, r2, #6
 80003fc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000400:	fb02 f303 	mul.w	r3, r2, r3
 8000404:	617b      	str	r3, [r7, #20]
 8000406:	e00b      	b.n	8000420 <SystemCoreClockUpdate+0x9c>
=======
 80002ce:	4b27      	ldr	r3, [pc, #156]	; (800036c <SystemCoreClockUpdate+0xec>)
 80002d0:	685b      	ldr	r3, [r3, #4]
 80002d2:	0d9b      	lsrs	r3, r3, #22
 80002d4:	f003 0301 	and.w	r3, r3, #1
 80002d8:	60bb      	str	r3, [r7, #8]
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 80002da:	4b24      	ldr	r3, [pc, #144]	; (800036c <SystemCoreClockUpdate+0xec>)
 80002dc:	685b      	ldr	r3, [r3, #4]
 80002de:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 80002e2:	607b      	str	r3, [r7, #4]
      
      if (pllsource != 0)
 80002e4:	68bb      	ldr	r3, [r7, #8]
 80002e6:	2b00      	cmp	r3, #0
 80002e8:	d00c      	beq.n	8000304 <SystemCoreClockUpdate+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 80002ea:	4a23      	ldr	r2, [pc, #140]	; (8000378 <SystemCoreClockUpdate+0xf8>)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	fbb2 f3f3 	udiv	r3, r2, r3
 80002f2:	4a1e      	ldr	r2, [pc, #120]	; (800036c <SystemCoreClockUpdate+0xec>)
 80002f4:	6852      	ldr	r2, [r2, #4]
 80002f6:	0992      	lsrs	r2, r2, #6
 80002f8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80002fc:	fb02 f303 	mul.w	r3, r2, r3
 8000300:	617b      	str	r3, [r7, #20]
 8000302:	e00b      	b.n	800031c <SystemCoreClockUpdate+0x9c>
>>>>>>> feature/systick
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
<<<<<<< HEAD
 8000408:	4a1b      	ldr	r2, [pc, #108]	; (8000478 <SystemCoreClockUpdate+0xf4>)
 800040a:	687b      	ldr	r3, [r7, #4]
 800040c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000410:	4a17      	ldr	r2, [pc, #92]	; (8000470 <SystemCoreClockUpdate+0xec>)
 8000412:	6852      	ldr	r2, [r2, #4]
 8000414:	0992      	lsrs	r2, r2, #6
 8000416:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800041a:	fb02 f303 	mul.w	r3, r2, r3
 800041e:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 8000420:	4b13      	ldr	r3, [pc, #76]	; (8000470 <SystemCoreClockUpdate+0xec>)
 8000422:	685b      	ldr	r3, [r3, #4]
 8000424:	0c1b      	lsrs	r3, r3, #16
 8000426:	f003 0303 	and.w	r3, r3, #3
 800042a:	3301      	adds	r3, #1
 800042c:	005b      	lsls	r3, r3, #1
 800042e:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 8000430:	697a      	ldr	r2, [r7, #20]
 8000432:	68fb      	ldr	r3, [r7, #12]
 8000434:	fbb2 f3f3 	udiv	r3, r2, r3
 8000438:	4a0e      	ldr	r2, [pc, #56]	; (8000474 <SystemCoreClockUpdate+0xf0>)
 800043a:	6013      	str	r3, [r2, #0]
      break;
 800043c:	e003      	b.n	8000446 <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 800043e:	4b0d      	ldr	r3, [pc, #52]	; (8000474 <SystemCoreClockUpdate+0xf0>)
 8000440:	4a0d      	ldr	r2, [pc, #52]	; (8000478 <SystemCoreClockUpdate+0xf4>)
 8000442:	601a      	str	r2, [r3, #0]
      break;
 8000444:	bf00      	nop
=======
 8000304:	4a1b      	ldr	r2, [pc, #108]	; (8000374 <SystemCoreClockUpdate+0xf4>)
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	fbb2 f3f3 	udiv	r3, r2, r3
 800030c:	4a17      	ldr	r2, [pc, #92]	; (800036c <SystemCoreClockUpdate+0xec>)
 800030e:	6852      	ldr	r2, [r2, #4]
 8000310:	0992      	lsrs	r2, r2, #6
 8000312:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000316:	fb02 f303 	mul.w	r3, r2, r3
 800031a:	617b      	str	r3, [r7, #20]
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 800031c:	4b13      	ldr	r3, [pc, #76]	; (800036c <SystemCoreClockUpdate+0xec>)
 800031e:	685b      	ldr	r3, [r3, #4]
 8000320:	0c1b      	lsrs	r3, r3, #16
 8000322:	f003 0303 	and.w	r3, r3, #3
 8000326:	3301      	adds	r3, #1
 8000328:	005b      	lsls	r3, r3, #1
 800032a:	60fb      	str	r3, [r7, #12]
      SystemCoreClock = pllvco/pllp;
 800032c:	697a      	ldr	r2, [r7, #20]
 800032e:	68fb      	ldr	r3, [r7, #12]
 8000330:	fbb2 f3f3 	udiv	r3, r2, r3
 8000334:	4a0e      	ldr	r2, [pc, #56]	; (8000370 <SystemCoreClockUpdate+0xf0>)
 8000336:	6013      	str	r3, [r2, #0]
      break;
 8000338:	e003      	b.n	8000342 <SystemCoreClockUpdate+0xc2>
    default:
      SystemCoreClock = HSI_VALUE;
 800033a:	4b0d      	ldr	r3, [pc, #52]	; (8000370 <SystemCoreClockUpdate+0xf0>)
 800033c:	4a0d      	ldr	r2, [pc, #52]	; (8000374 <SystemCoreClockUpdate+0xf4>)
 800033e:	601a      	str	r2, [r3, #0]
      break;
 8000340:	bf00      	nop
>>>>>>> feature/systick
  }
  /* Compute HCLK frequency --------------------------------------------------*/
  /* Get HCLK prescaler */
  tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
<<<<<<< HEAD
 8000446:	4b0a      	ldr	r3, [pc, #40]	; (8000470 <SystemCoreClockUpdate+0xec>)
 8000448:	689b      	ldr	r3, [r3, #8]
 800044a:	091b      	lsrs	r3, r3, #4
 800044c:	f003 030f 	and.w	r3, r3, #15
 8000450:	4a0b      	ldr	r2, [pc, #44]	; (8000480 <SystemCoreClockUpdate+0xfc>)
 8000452:	5cd3      	ldrb	r3, [r2, r3]
 8000454:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8000456:	4b07      	ldr	r3, [pc, #28]	; (8000474 <SystemCoreClockUpdate+0xf0>)
 8000458:	681a      	ldr	r2, [r3, #0]
 800045a:	693b      	ldr	r3, [r7, #16]
 800045c:	fa22 f303 	lsr.w	r3, r2, r3
 8000460:	4a04      	ldr	r2, [pc, #16]	; (8000474 <SystemCoreClockUpdate+0xf0>)
 8000462:	6013      	str	r3, [r2, #0]
}
 8000464:	bf00      	nop
 8000466:	371c      	adds	r7, #28
 8000468:	46bd      	mov	sp, r7
 800046a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800046e:	4770      	bx	lr
 8000470:	40023800 	.word	0x40023800
 8000474:	20000000 	.word	0x20000000
 8000478:	00f42400 	.word	0x00f42400
 800047c:	007a1200 	.word	0x007a1200
 8000480:	08000538 	.word	0x08000538

08000484 <Reset_Handler>:
=======
 8000342:	4b0a      	ldr	r3, [pc, #40]	; (800036c <SystemCoreClockUpdate+0xec>)
 8000344:	689b      	ldr	r3, [r3, #8]
 8000346:	091b      	lsrs	r3, r3, #4
 8000348:	f003 030f 	and.w	r3, r3, #15
 800034c:	4a0b      	ldr	r2, [pc, #44]	; (800037c <SystemCoreClockUpdate+0xfc>)
 800034e:	5cd3      	ldrb	r3, [r2, r3]
 8000350:	613b      	str	r3, [r7, #16]
  /* HCLK frequency */
  SystemCoreClock >>= tmp;
 8000352:	4b07      	ldr	r3, [pc, #28]	; (8000370 <SystemCoreClockUpdate+0xf0>)
 8000354:	681a      	ldr	r2, [r3, #0]
 8000356:	693b      	ldr	r3, [r7, #16]
 8000358:	fa22 f303 	lsr.w	r3, r2, r3
 800035c:	4a04      	ldr	r2, [pc, #16]	; (8000370 <SystemCoreClockUpdate+0xf0>)
 800035e:	6013      	str	r3, [r2, #0]
}
 8000360:	bf00      	nop
 8000362:	371c      	adds	r7, #28
 8000364:	46bd      	mov	sp, r7
 8000366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036a:	4770      	bx	lr
 800036c:	40023800 	.word	0x40023800
 8000370:	20000000 	.word	0x20000000
 8000374:	00f42400 	.word	0x00f42400
 8000378:	017d7840 	.word	0x017d7840
 800037c:	08000434 	.word	0x08000434

08000380 <Reset_Handler>:
>>>>>>> feature/systick

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
<<<<<<< HEAD
 8000484:	480d      	ldr	r0, [pc, #52]	; (80004bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000486:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000488:	f7ff ff6a 	bl	8000360 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800048c:	480c      	ldr	r0, [pc, #48]	; (80004c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800048e:	490d      	ldr	r1, [pc, #52]	; (80004c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000490:	4a0d      	ldr	r2, [pc, #52]	; (80004c8 <LoopForever+0xe>)
  movs r3, #0
 8000492:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000494:	e002      	b.n	800049c <LoopCopyDataInit>

08000496 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000496:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000498:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800049a:	3304      	adds	r3, #4

0800049c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800049c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800049e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a0:	d3f9      	bcc.n	8000496 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004a2:	4a0a      	ldr	r2, [pc, #40]	; (80004cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80004a4:	4c0a      	ldr	r4, [pc, #40]	; (80004d0 <LoopForever+0x16>)
  movs r3, #0
 80004a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004a8:	e001      	b.n	80004ae <LoopFillZerobss>

080004aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ac:	3204      	adds	r2, #4

080004ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b0:	d3fb      	bcc.n	80004aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004b2:	f000 f811 	bl	80004d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004b6:	f7ff fe8f 	bl	80001d8 <main>

080004ba <LoopForever>:

LoopForever:
  b LoopForever
 80004ba:	e7fe      	b.n	80004ba <LoopForever>
  ldr   r0, =_estack
 80004bc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004c4:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80004c8:	08000550 	.word	0x08000550
  ldr r2, =_sbss
 80004cc:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80004d0:	20000020 	.word	0x20000020

080004d4 <ADC_IRQHandler>:
=======
 8000380:	480d      	ldr	r0, [pc, #52]	; (80003b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000382:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000384:	f7ff ff6a 	bl	800025c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000388:	480c      	ldr	r0, [pc, #48]	; (80003bc <LoopForever+0x6>)
  ldr r1, =_edata
 800038a:	490d      	ldr	r1, [pc, #52]	; (80003c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800038c:	4a0d      	ldr	r2, [pc, #52]	; (80003c4 <LoopForever+0xe>)
  movs r3, #0
 800038e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000390:	e002      	b.n	8000398 <LoopCopyDataInit>

08000392 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000392:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000394:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000396:	3304      	adds	r3, #4

08000398 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000398:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800039a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800039c:	d3f9      	bcc.n	8000392 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800039e:	4a0a      	ldr	r2, [pc, #40]	; (80003c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003a0:	4c0a      	ldr	r4, [pc, #40]	; (80003cc <LoopForever+0x16>)
  movs r3, #0
 80003a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003a4:	e001      	b.n	80003aa <LoopFillZerobss>

080003a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003a8:	3204      	adds	r2, #4

080003aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003ac:	d3fb      	bcc.n	80003a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ae:	f000 f811 	bl	80003d4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003b2:	f7ff ff11 	bl	80001d8 <main>

080003b6 <LoopForever>:

LoopForever:
  b LoopForever
 80003b6:	e7fe      	b.n	80003b6 <LoopForever>
  ldr   r0, =_estack
 80003b8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003c0:	20000004 	.word	0x20000004
  ldr r2, =_sidata
 80003c4:	0800044c 	.word	0x0800044c
  ldr r2, =_sbss
 80003c8:	20000004 	.word	0x20000004
  ldr r4, =_ebss
 80003cc:	20000020 	.word	0x20000020

080003d0 <ADC_IRQHandler>:
>>>>>>> feature/systick
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
<<<<<<< HEAD
 80004d4:	e7fe      	b.n	80004d4 <ADC_IRQHandler>
	...

080004d8 <__libc_init_array>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	4d0d      	ldr	r5, [pc, #52]	; (8000510 <__libc_init_array+0x38>)
 80004dc:	4c0d      	ldr	r4, [pc, #52]	; (8000514 <__libc_init_array+0x3c>)
 80004de:	1b64      	subs	r4, r4, r5
 80004e0:	10a4      	asrs	r4, r4, #2
 80004e2:	2600      	movs	r6, #0
 80004e4:	42a6      	cmp	r6, r4
 80004e6:	d109      	bne.n	80004fc <__libc_init_array+0x24>
 80004e8:	4d0b      	ldr	r5, [pc, #44]	; (8000518 <__libc_init_array+0x40>)
 80004ea:	4c0c      	ldr	r4, [pc, #48]	; (800051c <__libc_init_array+0x44>)
 80004ec:	f000 f818 	bl	8000520 <_init>
 80004f0:	1b64      	subs	r4, r4, r5
 80004f2:	10a4      	asrs	r4, r4, #2
 80004f4:	2600      	movs	r6, #0
 80004f6:	42a6      	cmp	r6, r4
 80004f8:	d105      	bne.n	8000506 <__libc_init_array+0x2e>
 80004fa:	bd70      	pop	{r4, r5, r6, pc}
 80004fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000500:	4798      	blx	r3
 8000502:	3601      	adds	r6, #1
 8000504:	e7ee      	b.n	80004e4 <__libc_init_array+0xc>
 8000506:	f855 3b04 	ldr.w	r3, [r5], #4
 800050a:	4798      	blx	r3
 800050c:	3601      	adds	r6, #1
 800050e:	e7f2      	b.n	80004f6 <__libc_init_array+0x1e>
 8000510:	08000548 	.word	0x08000548
 8000514:	08000548 	.word	0x08000548
 8000518:	08000548 	.word	0x08000548
 800051c:	0800054c 	.word	0x0800054c

08000520 <_init>:
 8000520:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000522:	bf00      	nop
 8000524:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000526:	bc08      	pop	{r3}
 8000528:	469e      	mov	lr, r3
 800052a:	4770      	bx	lr

0800052c <_fini>:
 800052c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800052e:	bf00      	nop
 8000530:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000532:	bc08      	pop	{r3}
 8000534:	469e      	mov	lr, r3
 8000536:	4770      	bx	lr
=======
 80003d0:	e7fe      	b.n	80003d0 <ADC_IRQHandler>
	...

080003d4 <__libc_init_array>:
 80003d4:	b570      	push	{r4, r5, r6, lr}
 80003d6:	4d0d      	ldr	r5, [pc, #52]	; (800040c <__libc_init_array+0x38>)
 80003d8:	4c0d      	ldr	r4, [pc, #52]	; (8000410 <__libc_init_array+0x3c>)
 80003da:	1b64      	subs	r4, r4, r5
 80003dc:	10a4      	asrs	r4, r4, #2
 80003de:	2600      	movs	r6, #0
 80003e0:	42a6      	cmp	r6, r4
 80003e2:	d109      	bne.n	80003f8 <__libc_init_array+0x24>
 80003e4:	4d0b      	ldr	r5, [pc, #44]	; (8000414 <__libc_init_array+0x40>)
 80003e6:	4c0c      	ldr	r4, [pc, #48]	; (8000418 <__libc_init_array+0x44>)
 80003e8:	f000 f818 	bl	800041c <_init>
 80003ec:	1b64      	subs	r4, r4, r5
 80003ee:	10a4      	asrs	r4, r4, #2
 80003f0:	2600      	movs	r6, #0
 80003f2:	42a6      	cmp	r6, r4
 80003f4:	d105      	bne.n	8000402 <__libc_init_array+0x2e>
 80003f6:	bd70      	pop	{r4, r5, r6, pc}
 80003f8:	f855 3b04 	ldr.w	r3, [r5], #4
 80003fc:	4798      	blx	r3
 80003fe:	3601      	adds	r6, #1
 8000400:	e7ee      	b.n	80003e0 <__libc_init_array+0xc>
 8000402:	f855 3b04 	ldr.w	r3, [r5], #4
 8000406:	4798      	blx	r3
 8000408:	3601      	adds	r6, #1
 800040a:	e7f2      	b.n	80003f2 <__libc_init_array+0x1e>
 800040c:	08000444 	.word	0x08000444
 8000410:	08000444 	.word	0x08000444
 8000414:	08000444 	.word	0x08000444
 8000418:	08000448 	.word	0x08000448

0800041c <_init>:
 800041c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800041e:	bf00      	nop
 8000420:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000422:	bc08      	pop	{r3}
 8000424:	469e      	mov	lr, r3
 8000426:	4770      	bx	lr

08000428 <_fini>:
 8000428:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800042a:	bf00      	nop
 800042c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800042e:	bc08      	pop	{r3}
 8000430:	469e      	mov	lr, r3
 8000432:	4770      	bx	lr
>>>>>>> feature/systick
