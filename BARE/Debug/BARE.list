
BARE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000120  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080002b8  080002c0  000102c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080002b8  080002b8  000102c0  2**0
                  CONTENTS
  4 .ARM          00000000  080002b8  080002b8  000102c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080002b8  080002c0  000102c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080002b8  080002b8  000102b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080002bc  080002bc  000102bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000102c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080002c0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080002c0  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000102c0  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000102f0  2**0
                  CONTENTS, READONLY
 13 .debug_info   000005e1  00000000  00000000  00010333  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000173  00000000  00000000  00010914  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000070  00000000  00000000  00010a88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000046  00000000  00000000  00010af8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000dd2c  00000000  00000000  00010b3e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000b5f  00000000  00000000  0001e86a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0004fe02  00000000  00000000  0001f3c9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000000ac  00000000  00000000  0006f1cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000004c  00000000  00000000  0006f278  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080002a0 	.word	0x080002a0

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080002a0 	.word	0x080002a0

080001d8 <main>:
 *
 ******************************************************************************
 */
#include "main.h"
int main(void)
{
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0




    /* Loop forever */
	for(;;);
 80001dc:	e7fe      	b.n	80001dc <main+0x4>
	...

080001e0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80001e0:	b480      	push	{r7}
 80001e2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80001e4:	4b06      	ldr	r3, [pc, #24]	; (8000200 <SystemInit+0x20>)
 80001e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80001ea:	4a05      	ldr	r2, [pc, #20]	; (8000200 <SystemInit+0x20>)
 80001ec:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80001f0:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80001f4:	bf00      	nop
 80001f6:	46bd      	mov	sp, r7
 80001f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	e000ed00 	.word	0xe000ed00

08000204 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000204:	480d      	ldr	r0, [pc, #52]	; (800023c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000206:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000208:	f7ff ffea 	bl	80001e0 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800020c:	480c      	ldr	r0, [pc, #48]	; (8000240 <LoopForever+0x6>)
  ldr r1, =_edata
 800020e:	490d      	ldr	r1, [pc, #52]	; (8000244 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000210:	4a0d      	ldr	r2, [pc, #52]	; (8000248 <LoopForever+0xe>)
  movs r3, #0
 8000212:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000214:	e002      	b.n	800021c <LoopCopyDataInit>

08000216 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000216:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000218:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800021a:	3304      	adds	r3, #4

0800021c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800021c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800021e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000220:	d3f9      	bcc.n	8000216 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000222:	4a0a      	ldr	r2, [pc, #40]	; (800024c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000224:	4c0a      	ldr	r4, [pc, #40]	; (8000250 <LoopForever+0x16>)
  movs r3, #0
 8000226:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000228:	e001      	b.n	800022e <LoopFillZerobss>

0800022a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800022a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800022c:	3204      	adds	r2, #4

0800022e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800022e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000230:	d3fb      	bcc.n	800022a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000232:	f000 f811 	bl	8000258 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000236:	f7ff ffcf 	bl	80001d8 <main>

0800023a <LoopForever>:

LoopForever:
  b LoopForever
 800023a:	e7fe      	b.n	800023a <LoopForever>
  ldr   r0, =_estack
 800023c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000240:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000244:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000248:	080002c0 	.word	0x080002c0
  ldr r2, =_sbss
 800024c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000250:	2000001c 	.word	0x2000001c

08000254 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000254:	e7fe      	b.n	8000254 <ADC_IRQHandler>
	...

08000258 <__libc_init_array>:
 8000258:	b570      	push	{r4, r5, r6, lr}
 800025a:	4d0d      	ldr	r5, [pc, #52]	; (8000290 <__libc_init_array+0x38>)
 800025c:	4c0d      	ldr	r4, [pc, #52]	; (8000294 <__libc_init_array+0x3c>)
 800025e:	1b64      	subs	r4, r4, r5
 8000260:	10a4      	asrs	r4, r4, #2
 8000262:	2600      	movs	r6, #0
 8000264:	42a6      	cmp	r6, r4
 8000266:	d109      	bne.n	800027c <__libc_init_array+0x24>
 8000268:	4d0b      	ldr	r5, [pc, #44]	; (8000298 <__libc_init_array+0x40>)
 800026a:	4c0c      	ldr	r4, [pc, #48]	; (800029c <__libc_init_array+0x44>)
 800026c:	f000 f818 	bl	80002a0 <_init>
 8000270:	1b64      	subs	r4, r4, r5
 8000272:	10a4      	asrs	r4, r4, #2
 8000274:	2600      	movs	r6, #0
 8000276:	42a6      	cmp	r6, r4
 8000278:	d105      	bne.n	8000286 <__libc_init_array+0x2e>
 800027a:	bd70      	pop	{r4, r5, r6, pc}
 800027c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000280:	4798      	blx	r3
 8000282:	3601      	adds	r6, #1
 8000284:	e7ee      	b.n	8000264 <__libc_init_array+0xc>
 8000286:	f855 3b04 	ldr.w	r3, [r5], #4
 800028a:	4798      	blx	r3
 800028c:	3601      	adds	r6, #1
 800028e:	e7f2      	b.n	8000276 <__libc_init_array+0x1e>
 8000290:	080002b8 	.word	0x080002b8
 8000294:	080002b8 	.word	0x080002b8
 8000298:	080002b8 	.word	0x080002b8
 800029c:	080002bc 	.word	0x080002bc

080002a0 <_init>:
 80002a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002a2:	bf00      	nop
 80002a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002a6:	bc08      	pop	{r3}
 80002a8:	469e      	mov	lr, r3
 80002aa:	4770      	bx	lr

080002ac <_fini>:
 80002ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ae:	bf00      	nop
 80002b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002b2:	bc08      	pop	{r3}
 80002b4:	469e      	mov	lr, r3
 80002b6:	4770      	bx	lr
